#!/bin/bash

source /etc/aul/aul-va.conf


START_EPOCH=$(date -u -d "${START_DATE}" +"%s")
END_EPOCH=$(date -u -d "${END_DATE}" +"%s")

> /tmp/group1  #Compute
> /tmp/group2  #RemoteViz
> /tmp/group3  #GPUCompute
qmgr -c " p  n @default" | grep -i resources_available.instancetype | grep -i $config1 | awk '{print $3}' >> /tmp/group1
qmgr -c " p  n @default" | grep -i resources_available.instancetype | grep -i $config2 | awk '{print $3}' >> /tmp/group2
qmgr -c " p  n @default" | grep -i resources_available.instancetype | grep -i $config3 | awk '{print $3}' >> /tmp/group2
qmgr -c " p  n @default" | grep -i resources_available.instancetype | grep -i $config4 | awk '{print $3}' >> /tmp/group3
qmgr -c " p  n @default" | grep -i resources_available.instancetype | grep -i $config5 | awk '{print $3}'  >> /tmp/group3

#echo ""
echo "UsageHours for finished jobs/nodes:"
#echo ""
for j in $(cat /tmp/group1)
do
 rth=0
 uptimesecs=`/altair/pbsworks/pbs/exec/bin/pbsnodes $j | grep -w totaluptime | awk '{print $3}'`
 for i in $(echo $uptimesecs | sed "s/,/ /g")
 do
  #echo $i
  if [ $i -eq 0 ]
  then
   rih=0
  elif [ $i -lt 3600 ]
  then
   rih=1
  else
   ihrs=`/usr/bin/expr $i / 3600`
   iremain=`/usr/bin/expr $i % 3600`

   if [ $iremain -le 900 ]
   then
    rih=$ihrs+.25
   elif [ $iremain -le 1800 ]
   then
    rih=$ihrs+.50
   elif [ $iremain -le 2700 ]
   then
    rih=$ihrs+.75
   else
    rih=$ihrs+1
   fi
  fi

  #echo "rounded calc ocn$j usagehours for $i seconds = $rih hours"
  rth=`echo $rth+$rih | /usr/bin/bc`
  #echo "calc ocn$j usagehours = $rth"
 done


 echo "$j (compute) rounded nodehours = $rth"
 #rth=`echo $rth*1.0 | /usr/bin/bc`
 #echo "ocn$j (compute standard->premium x1.0 ) converted nodehours = $rth"

 th=`echo $th+$rth | /usr/bin/bc`
 #echo "total usage hours after ocn$j computation = $th"
done
#echo "total compute node usagehours = $th"

###################################################
for j in $(cat /tmp/group2)
do
 rth=0
 uptimesecs=`/altair/pbsworks/pbs/exec/bin/pbsnodes $j | grep -w totaluptime | awk '{print $3}'`
 for i in $(echo $uptimesecs | sed "s/,/ /g")
 do
  #echo $i
  if [ $i -eq 0 ]
  then
   rih=0
  elif [ $i -lt 3600 ]
  then
   rih=1
  else
   ihrs=`/usr/bin/expr $i / 3600`
   iremain=`/usr/bin/expr $i % 3600`
   if [ $iremain -le 900 ]
   then
    rih=$ihrs+.25
   elif [ $iremain -le 1800 ]
   then
    rih=$ihrs+.50
   elif [ $iremain -le 2700 ]
   then
    rih=$ihrs+.75
   else
    rih=$ihrs+1
   fi
  fi

  #echo "rounded on$j usagehours for $i seconds = $rih hours"
  rth=`echo $rth+$rih | /usr/bin/bc`
  #echo "rth = $rth"
 done
 echo "$j (remoteviz) rounded nodehours = $rth"
 #rth=`echo $rth*1 | /usr/bin/bc`
 #echo "on$j (remoteviz) gpu hours = $rth"

 th=`echo $th+$rth | /usr/bin/bc`
 #echo "total usage hours after ocn$j computation = $th"
done


########################################

rh=`echo $ph-$th | /usr/bin/bc`
rh=`echo $rh+$cr | /usr/bin/bc`


#########################################
echo ""

echo "purchased_nodehours = $ph"
echo "used_nodehours = $th"
echo "credit_nodehours = $cr"
echo "remaining_nodehours = $rh"

echo ""
echo "contract_period = 4 months"
echo "Start_date = $(date -d $START_DATE '+%B-%d-%Y')"
echo "End_date = $(date -d $END_DATE '+%B-%d-%Y')"

echo ""
echo "For Internal System Use"
echo "START_EPOCH=$START_EPOCH"
echo "END_EPOCH="$((END_EPOCH + 23 * 3600))
